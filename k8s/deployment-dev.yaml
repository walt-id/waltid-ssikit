apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: data-volume-claim
spec:
    accessModes:
        - ReadWriteMany
    resources:
        requests:
            storage: 100Mi
---
apiVersion: v1
kind: ConfigMap
metadata:
    name: signatory-config
data:
    signatory.conf: |
        {
            "proofConfig": {
                "issuerDid": "",
                "proofType": "LD_PROOF",
                "credentialsEndpoint": "https://signatory.ssikit.walt-test.cloud/v1/credentials"
            },
            "templatesFolder": "vc-templates-runtime"
        }
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ssikit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ssikit
  template:
    metadata:
      labels:
        app: ssikit
      annotations:
        deployment/id: "_DEFAULT_DEPLOYMENT_"
    spec:
      containers:
        - name: ssikit
          image: waltid/ssikit:latest
          volumeMounts:
              -   name: signatory-config
                  mountPath: "/app/config/signatory.conf"
                  subPath: "signatory.conf"
                  readOnly: true
              -   mountPath: "/app/data/revocation"
                  name: data-volume
          args:
            - serve
            - -b
            - 0.0.0.0
          ports:
            - containerPort: 7000
              name: core-api
            - containerPort: 7001
              name: signatory-api
            - containerPort: 7002
              name: custodian-api
            - containerPort: 7003
              name: auditor-api
            - containerPort: 7004
              name: essif-api
      volumes:
          -   name: signatory-config
              configMap:
                  items:
                      -   key: signatory.conf
                          path: signatory.conf
                  name: signatory-config
          -   name: data-volume
              persistentVolumeClaim:
                  claimName: data-volume-claim
---
kind: Service
apiVersion: v1
metadata:
  name: ssikit
spec:
  ports:
    - name: http-core
      port: 7000
      targetPort: core-api
      protocol: TCP
    - name: http-signatory
      port: 7001
      targetPort: signatory-api
      protocol: TCP
    - name: http-custodian
      port: 7002
      targetPort: custodian-api
      protocol: TCP
    - name: http-auditor
      port: 7003
      targetPort: auditor-api
      protocol: TCP
    - name: http-essif
      port: 7004
      targetPort: essif-api
      protocol: TCP
  selector:
    app: ssikit
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ssikit
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - core.ssikit.walt-test.cloud
        - signatory.ssikit.walt-test.cloud
        - custodian.ssikit.walt-test.cloud
        - auditor.ssikit.walt-test.cloud
        - essif.ssikit.walt-test.cloud
      secretName: ssikit-tls-secret
  rules:
    - host: core.ssikit.walt-test.cloud
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ssikit
                port:
                  name: http-core
    - host: signatory.ssikit.walt-test.cloud
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ssikit
                port:
                  name: http-signatory
    - host: custodian.ssikit.walt-test.cloud
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ssikit
                port:
                  name: http-custodian
    - host: auditor.ssikit.walt-test.cloud
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ssikit
                port:
                  name: http-auditor
    - host: essif.ssikit.walt-test.cloud
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ssikit
                port:
                  name: http-essif
